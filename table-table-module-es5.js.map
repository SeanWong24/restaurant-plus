{"version":3,"sources":["src/app/table/table.page.html","src/app/models/table.ts","src/app/table/table-routing.module.ts","src/app/table/table.module.ts","src/app/table/table.page.scss","src/app/table/table.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Table</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"goToDetailView('new')\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list *ngIf=\\\"tableList\\\">\\n    <ion-item button *ngFor=\\\"let table of tableList\\\" (click)=\\\"goToDetailView(table.id)\\\">\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>{{table.name}}</ion-label>\\n        </ion-col>\\n        <ion-col>\\n          <ion-label>({{table.occupied}}/{{table.capacity}})</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-badge slot=\\\"end\\\" [color]=\\\"table.status | tableStatusColor\\\">{{table.status}}</ion-badge>\\n    </ion-item>\\n  </ion-list>\\n  <ion-list *ngIf=\\\"!tableList\\\">\\n    <ion-item button *ngFor=\\\"let i of [1, 2, 3, 4, 5]\\\">\\n      <ion-row>\\n        <ion-col>\\n          <ion-skeleton-text animated style=\\\"width: 100px;\\\"></ion-skeleton-text>\\n        </ion-col>\\n        <ion-col>\\n          <ion-skeleton-text animated style=\\\"width: 50px;\\\"></ion-skeleton-text>\\n        </ion-col>\\n      </ion-row>\\n      <ion-skeleton-text slot=\\\"end\\\" animated style=\\\"width: 50px;\\\"></ion-skeleton-text>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\"","export class Table {\n    static readonly Status = {\n        Free: 'Free',\n        Using: 'Using',\n        Reserved: 'Reserved',\n        Dirty: 'Dirty',\n        Unavailable: 'Unavailable',\n    };\n\n    id: string | undefined;\n    name: string;\n    capacity: number;\n    occupied: number = 0;\n    status: string = Table.Status.Unavailable;\n    startTime?: string;\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TablePage } from './table.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TablePage\n  },\n  {\n    path: ':id',\n    loadChildren: () => import('./table-detail/table-detail.module').then( m => m.TableDetailPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TablePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TablePageRoutingModule } from './table-routing.module';\n\nimport { TablePage, TableStatusColorPipe } from './table.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TablePageRoutingModule\n  ],\n  declarations: [TablePage, TableStatusColorPipe]\n})\nexport class TablePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYmxlL3RhYmxlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { Table } from '../models/table';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.page.html',\n  styleUrls: ['./table.page.scss'],\n})\nexport class TablePage implements OnInit {\n\n  tableList: Table[];\n\n  constructor(private navController: NavController) { }\n\n  ngOnInit() {\n  }\n\n  ionViewDidEnter() {\n    this.tableList = undefined;\n    this.fetchTableList();\n  }\n\n  async fetchTableList() {\n    const response = await fetch(localStorage.getItem('serverApiBaseUrl') + '/table');\n    this.tableList = await response.json();\n  }\n\n  goToDetailView(tableId: string) {\n    this.navController.navigateForward('/table/' + tableId);\n  }\n\n}\n\n@Pipe({ name: 'tableStatusColor' })\nexport class TableStatusColorPipe implements PipeTransform {\n\n  transform(status: string): string {\n    switch (status) {\n      case Table.Status.Free:\n        return 'secondary';\n      case Table.Status.Using:\n        return 'success';\n      case Table.Status.Reserved:\n        return 'tertiary';\n      case Table.Status.Dirty:\n        return 'warning';\n      case Table.Status.Unavailable:\n        return 'danger';\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"table-table-module-es5.js"}