{"version":3,"sources":["./src/app/table/table.page.html","./src/app/models/table.ts","./src/app/table/table-routing.module.ts","./src/app/table/table.module.ts","./src/app/table/table.page.scss","./src/app/table/table.page.ts"],"names":[],"mappings":"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","file":"table-table-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Table</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"goToDetailView('new')\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list *ngIf=\\\"tableList\\\">\\n    <ion-item button *ngFor=\\\"let table of tableList\\\" (click)=\\\"goToDetailView(table.id)\\\">\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>{{table.name}}</ion-label>\\n        </ion-col>\\n        <ion-col>\\n          <ion-label>({{table.occupied}}/{{table.capacity}})</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      <ion-badge slot=\\\"end\\\" [color]=\\\"table.status | tableStatusColor\\\">{{table.status}}</ion-badge>\\n    </ion-item>\\n  </ion-list>\\n  <ion-list *ngIf=\\\"!tableList\\\">\\n    <ion-item button *ngFor=\\\"let i of [1, 2, 3, 4, 5]\\\">\\n      <ion-row>\\n        <ion-col>\\n          <ion-skeleton-text animated style=\\\"width: 100px;\\\"></ion-skeleton-text>\\n        </ion-col>\\n        <ion-col>\\n          <ion-skeleton-text animated style=\\\"width: 50px;\\\"></ion-skeleton-text>\\n        </ion-col>\\n      </ion-row>\\n      <ion-skeleton-text slot=\\\"end\\\" animated style=\\\"width: 50px;\\\"></ion-skeleton-text>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\"","export class Table {\n    static readonly Status = {\n        Free: 'Free',\n        Using: 'Using',\n        Reserved: 'Reserved',\n        Dirty: 'Dirty',\n        Unavailable: 'Unavailable',\n    };\n\n    id: string | undefined;\n    name: string;\n    capacity: number;\n    occupied: number = 0;\n    status: string = Table.Status.Unavailable;\n    startTime?: string;\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TablePage } from './table.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TablePage\n  },\n  {\n    path: ':id',\n    loadChildren: () => import('./table-detail/table-detail.module').then( m => m.TableDetailPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TablePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TablePageRoutingModule } from './table-routing.module';\n\nimport { TablePage, TableStatusColorPipe } from './table.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TablePageRoutingModule\n  ],\n  declarations: [TablePage, TableStatusColorPipe]\n})\nexport class TablePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYmxlL3RhYmxlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { Table } from '../models/table';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.page.html',\n  styleUrls: ['./table.page.scss'],\n})\nexport class TablePage implements OnInit {\n\n  tableList: Table[];\n\n  constructor(private navController: NavController) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.tableList = undefined;\n    this.fetchTableList();\n  }\n\n  async fetchTableList() {\n    const response = await fetch(localStorage.getItem('serverApiBaseUrl') + '/table');\n    this.tableList = await response.json();\n  }\n\n  goToDetailView(tableId: string) {\n    this.navController.navigateForward('/table/' + tableId);\n  }\n\n}\n\n@Pipe({ name: 'tableStatusColor' })\nexport class TableStatusColorPipe implements PipeTransform {\n\n  transform(status: string): string {\n    switch (status) {\n      case Table.Status.Free:\n        return 'secondary';\n      case Table.Status.Using:\n        return 'success';\n      case Table.Status.Reserved:\n        return 'tertiary';\n      case Table.Status.Dirty:\n        return 'warning';\n      case Table.Status.Unavailable:\n        return 'danger';\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}